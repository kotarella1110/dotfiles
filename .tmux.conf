# General
set-option -g default-shell /opt/local/bin/bash

# escapeの効きをよくする
set-option -s escape-time 0

#set-option -g prefix C-a
# Nested tmux sessions
bind-key C-b send-prefix
#unbind-key C-b

# 設定ファイルをリロードする
bind-key C-r source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"
bind-key r source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"

# ステータスバー

## ステータスバーをトップに配置する
set-option -g status-position top

## 左右のステータスバーの長さを決定する
set-option -g status-left-length 90
set-option -g status-right-length 90

## #H => マシン名
## #P => ペイン番号
## 最左に表示
set-option -g status-left '#H:[#P]'

## Wi-Fi、バッテリー残量、現在時刻
## 最右に表示
set-option -g status-right '#(get_ssid) #(battery -c tmux) [%Y-%m-%d(%a) %H:%M]'

## ステータスバーを Utf-8 に対応
set-option -g status-utf8 on

## ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1

## センタライズ（主にウィンドウ番号など）
set-option -g status-justify centre

# コピーモード

## Vi キーバインド
set-window-option -g mode-keys vi

## Prefix+v でコピーモード開始
bind-key C-v copy-mode \; display "copy mode!"
bind-key v copy-mode \; display "copy mode!"
bind-key -t vi-copy v begin-selection

## Prefix+Enter/y でコピー
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#bind-key -t vi-copy Enter copy-pipe "/opt/local/bin/reattach-to-user-namespace pbcopy"
bind-key -t vi-copy y     copy-pipe "reattach-to-user-namespace pbcopy"
#bind-key -t vi-copy y     copy-pipe "/opt/local/bin/reattach-to-user-namespace pbcopy"

## Prefix+p でペースト
## クリップボードにも保存されているので Cmd-v でもペースト可能
#bind-key C-p paste-buffer
#bind-key p paste-buffer
bind-key C-p run-shell "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
bind-key p run-shell "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

## vim <=> tmux 間でクリップボード利用を可能にする
set-option -g default-command "reattach-to-user-namespace -l bash"
#set-option -g default-command "/opt/local/bin/reattach-to-user-namespace -l $SHELL"

# ウィンドウとペイン

## ウィンドウとペインの番号を1から開始する（デフォルト0）
set-option -g base-index 1
set-window-option -g pane-base-index 1

## Prefix+- で横に、Prefix+| で縦に分割（ペイン）する
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

## Prefix + Ctrl-h/l でウィンドウ切り替え
## Prefix + Ctrl-h,h,h,h,...と連打できる
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

## Prefix+hjkl でペイン移動
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

## ペインサイズを上下左右（Prefix+JKHL）に変更
## Prefix+J,J,J,J,...と連打してリサイズ可能
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

## Ctrl-o でペインをローテーションしながら移動
## Prefix を用いないのでタイプが楽だが、Ctrl-o を使用してしまう
## 他のソフトウェアの設定に支障をきたさないように注意
#bind-key -n C-o select-pane -t :.+

# マウス
#set-option -g mouse on
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M

# monokai
set-option -g status-utf8 on
set-option -g default-terminal screen-256color

## status-bar
set-option -g status-fg colour245
set-option -g status-bg colour237
set-option -g status-attr none

## pane

### default
set-option -g pane-border-fg colour237
#set-option -g pane-border-bg colour237

### active
set-option -g pane-active-border-fg colour255
#set-option -g pane-active-border-bg colour255

## window

### default
#set-window-option -g window-status-fg colour245
#set-window-option -g window-status-bg colour237
#set-window-option -g window-status-attr none

### active
set-window-option -g window-status-current-fg colour255
set-window-option -g window-status-current-bg colour245
set-window-option -g window-status-current-attr underscore

## message-bar
set-option -g message-bg colour245
set-option -g message-fg colour255
